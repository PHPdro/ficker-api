name: Pedrops e Alambda

on:
  push:
    branches:
      - main

jobs:
  # build-push-ghcr:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Log into GitHub Container Registry
  #       run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

  #     - name: Build Docker Image
  #       run: docker build -t ghcr.io/phpdro/ficker-api/ficker-back:latest .
        
  #     - name: Push Docker Image to GitHub Container Registry
  #       run: docker push ghcr.io/phpdro/ficker-api/ficker-back:latest

  # run-tests:
  #   runs-on: ubuntu-latest
  #   needs: build-push-ghcr

  #   steps:
  #     - name: Run db image
  #       run: docker run -d -p 3306:3306 
  #           -e ALLOW_EMPTY_PASSWORD="no" 
  #           -e MYSQL_ROOT_PASSWORD=ficker 
  #           -e MYSQL_DATABASE=ficker 
  #           -e MYSQL_USER=ficker 
  #           -e MYSQL_PASSWORD=ficker 
  #           --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 
  #           --name bd mysql:latest

  #     - name: Run app image
  #       run: docker run -d --name app ghcr.io/phpdro/ficker-api/ficker-back:latest

  #     - name: Run tests
  #       run: |
  #         docker exec app php artisan migrate:fresh --seed
  #         docker exec app php artisan test --filter test_users_can_store_incomes

  # push-artifact-registry:
  #   runs-on: ubuntu-latest
  #   needs: run-tests

  #   steps:
  #     - name: Checkout code
  #       uses: "actions/checkout@v4"

  #     - name: Pull image
  #       run: |
  #         docker pull ghcr.io/phpdro/ficker-api/ficker-back:latest
  #         docker tag ghcr.io/phpdro/ficker-api/ficker-back:latest us-central1-docker.pkg.dev/cinfo-devops-2023-2/docker/pedro:latest

  #     - name: Login to gcp
  #       uses: "google-github-actions/auth@v2"
  #       with:
  #           credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" 

  #     - name: Set up Cloud SDK
  #       uses: "google-github-actions/setup-gcloud@v2"
  #       with:
  #         version: ">= 363.0.0"

  #     - name: gcloud cli
  #       run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin us-central1-docker.pkg.dev/cinfo-devops-2023-2/docker/pedro

  #     - name: Push image
  #       run: docker push us-central1-docker.pkg.dev/cinfo-devops-2023-2/docker/pedro:latest

  deploy-to-cloud-run:
    runs-on: ubuntu-latest
    # needs: push-artifact-registry
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Login to gcp
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 363.0.0"

      - name: Deploy to Cloud Run
        # uses: "google-github-actions/deploy-cloudrun@v2"
        # with:
        #   service: "pedro"
        #   image: "us-central1-docker.pkg.dev/cinfo-devops-2023-2/docker/pedro:latest"
        run: gcloud run deploy pedro --image us-central1-docker.pkg.dev/cinfo-devops-2023-2/docker/pedro:latest --max-instances=3 --port 8080